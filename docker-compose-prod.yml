version: "3.5"
services:
  api1:
    build: .
    hostname: api1
    container_name: api1
    depends_on:
      - postgres
      - redis
    network_mode: host
    env_file:
      - .env
    environment:
      SERVER_PORT: 8080
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1GB"

  api2:
    build: .
    hostname: api2
    container_name: api2
    depends_on:
      - postgres
      - redis
    network_mode: host
    env_file:
      - .env
    environment:
      SERVER_PORT: 8081
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1GB"

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx-prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1GB"

  postgres:
    image: postgres:latest
    container_name: rinhadb
    environment:
      POSTGRES_DB: rinhadb
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
    network_mode: host

    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql-prod.conf:/docker-entrypoint-initdb.d/postgresql.conf
      # - ./postgresql.conf:/etc/postgresql/postgresql.conf

    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf

    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2GB"

  redis:
    image: redis:latest
    container_name: rinhacache
    network_mode: host
    volumes:
      - redis-data:/data
    command: redis-server --save "" --appendonly no --protected-mode no
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1GB"

volumes:
  postgres-data:
  redis-data: